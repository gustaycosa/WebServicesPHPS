<?php include("../../funciones.php");

try{ 
    
    if ($_POST){
        ini_set("soap.wsdl_cache_enabled", "0");
        $movimiento=  $_POST["TxtClave"]; 
        //parametros de la llamada
        
        //parametros de la llamada
        $parametros = array();
        $parametros['sMovimiento'] = $movimiento;
        $WS = new SoapClient($WebService, $parametros);
        $result = $WS->DetalleFacturas($parametros);
        $xml = $result->DetalleFacturasResult->any;
        $obj = simplexml_load_string($xml);
        $Datos = $obj->NewDataSet->Table;
//echo $xml;
    }
    else{}
} catch(SoapFault $e){
  var_dump($e);
}

echo "<div class='table-responsive'><table id='griddet' class='table table-striped table-bordered table-condensed table-hover display compact' cellspacing='0' style='width:100%;' ><tfoot><th></th><th></th><th></th><th></th><th></th><th></th></tfoot></table></div>";

$arreglo = [];
for($i=0; $i<count($Datos); $i++){
    $arreglo[$i]=$Datos[$i];
}
        //print_r($arreglo);
        //echo number_format($Suma, 2, ',', ' ');

?>

    <script type="text/javascript"> 
        var datos = 
        <?php 
            echo json_encode($arreglo);
        ?>
        ;
        $(document).ready(function() {                                                                                             
            var table = $('#griddet').DataTable({
                data:datos,
                columns: [
                    { data: "concepto" },
                    { data: "articulo" },
                    { data: "cantidad" },
                    { data: "precioventa" },
                    { data: "importe" },
                    { data: "subtotal" },
                ],
                columnDefs: [
                    { "title": "CONCEPTO", className: "text-left", "targets": 0},
                    { "title": "ARTICULO", className: "text-left", "targets": 1},
                    { "title": "CANTIDAD", className: "text-left", "targets": 2},
                    { "title": "PRECIO VENTA", className: "text-right", "targets": 3},
                    { "title": "IMPORTE", className: "text-right", "targets": 4},
                    { "title": "SUBTOTAL", className: "text-right", "targets": 5},
                ],
            'createdRow': function ( row, data, index ) {
            },  
            paging: false,
            searching: false,
            ordering: false,
            buttons: [
                {
                    extend: 'copy',
                    message: 'PDF created by PDFMake with Buttons for DataTables.',
                    text: 'Copiar',
                    exportOptions: {
                        modifier: {
                            page: 'all'
                        }
                    }
                },
                {
                    extend: 'pdf',
                    text: 'PDF',
                    customize: function ( doc ) {
                        // Splice the image in after the header, but before the table
                        doc.content.splice( 1, 0, {
                            margin: [ 0, 0, 0, 12 ],
                            alignment: 'center'
                        } );
                        // Data URL generated by http://dataurl.net/#dataurlmaker
                    },
                    filename: 'factdiaria',
                    extension: '.pdf',       
                    exportOptions: {
                        columns: ':visible',
                        modifier: {
                            page: 'all'
                        }
                    }
                },
                {
                    extend: 'csv',
                    text: 'CSV',
                    header:'true',
                    filename: 'factdiaria',
                    extension: '.csv',       
                    exportOptions: {
                        columns: ':visible',
                        modifier: {
                            page: 'all'
                        }
                    }
                },
                {
                    extend: 'excel',
                    message: 'PDF creado desde el sistema en linea del tayco.',
                    text: 'XLS',
                    filename: 'factdiaria',
                    extension: '.xlsx', 
                    exportOptions: {
                        columns: ':visible',
                        modifier: {
                            page: 'all'
                        }
                    },
                    customize: function( xlsx ) {
                        var sheet = xlsx.xl.worksheets['sheet1.xml'];
                        $('row:first c', sheet).attr( 's', '42' );
                    }
                },
                {
                    extend: 'print',
                    message: 'PDF creado desde el sistema en linea del tayco.',
                    text: 'Imprimir',
                    exportOptions: {
                        stripHtml: false,
                        modifier: {
                            page: 'all'
                        }
                    }
                },
            ],
            'pagingType': 'full_numbers',
            'lengthMenu': [[-1], ['Todo']],
            'language': {
                'sProcessing':    'Procesando...',
                'sLengthMenu':    'Mostrar _MENU_ registros',
                'sZeroRecords':   'No se encontraron resultados',
                'sEmptyTable':    'Ningún dato disponible en esta tabla',
                'sInfo':          'Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros',
                'sInfoEmpty':     'Mostrando registros del 0 al 0 de un total de 0 registros',
                'sInfoFiltered':  '(filtrado de un total de _MAX_ registros)',
                'sInfoPostFix':   '',
                'sSearch':        'Buscar:',
                'sUrl':           '',
                'sInfoThousands':  ',',
                'sLoadingRecords': 'Cargando...',
                'oPaginate': {
                    'sFirst':    'Primero',
                    'sLast':    'Último',
                    'sNext':    'Siguiente',
                    'sPrevious': 'Anterior'
                },
                'oAria': {
                    'sSortAscending':  ': Activar para ordenar la columna de manera ascendente',
                    'sSortDescending': ': Activar para ordenar la columna de manera descendente'
                }
            },
            'scrollY': '45vh',
            'scrollCollapse': true,
            'scrollX': true,
            'paging': false,
             fixedHeader: {
                header: true,
                footer: false
            },
            'responsive':true,
       "footerCallback": function ( row, data, start, end, display ) {
            var api = this.api(), data;
           
            var api_precioventa = this.api(), data;
            var api_importe = this.api(), data;
            var api_subtotal = this.api(), data;
            
            // Remove the formatting to get integer data for summation
            var intVal = function ( i ) {
                return typeof i === 'string' ?
                    i.replace(/[\$,]/g, '')*1 :
                    typeof i === 'number' ?
                        i : 0;
            };
            //===========================================================================
            total_precioventa = api_precioventa
                .column( 3 )
                .data()
                .reduce( function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0 );

            var numFormat = $.fn.dataTable.render.number( '\,', '.', 2, '$' ).display;
            $( api_precioventa.column( 3 ).footer() ).html(numFormat(total_precioventa) );
            //===========================================================================
            total_importe = api_importe
                .column( 4 )
                .data()
                .reduce( function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0 );

            // Update footer
            $( api_importe.column( 4 ).footer() ).html(numFormat(total_importe) );
            //===========================================================================
            total_subtotal = api_subtotal
                .column( 5 )
                .data()
                .reduce( function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0 );

            // Update footer
            $( api_subtotal.column( 5 ).footer() ).html(numFormat(total_subtotal) );
           
        }
        } );
            
/*        //var t = $('#gridsoli').DataTable();
        var counter = 1;
        
        $('#addRow').on( 'click', function () {
            table.row.add( {
                "Fecha":       "10/01/2018",
                "Nombre_Para":   "System Architect",
                "asunto":     "wasdasasdas",
                "Num": "0",
                "Num2":     "0"
            } ).draw();

            counter++;
        } );*/

        // Automatically add a first row of data
        //$('#addRow').click();
            
/*
        $('td.fin').on('click', function (e) {
            e.preventDefault();

            var nRow = $(this).parents('tr')[0];
            oTable.fnDeleteRow( nRow );
        } );*/
/*        $('#gridsoli tbody').on( 'click', 'tr', function () {
        var row = gridsoli
           .row($(this).closest("tr"))   //get DT API for the clicked row
           .remove()
           .draw();
        });*/
    } );

    </script>